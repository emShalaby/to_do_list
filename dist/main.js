(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var i=t(537),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([e.id,"*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    border: solid hotpink 2px;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n    \n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n    \n}\n\n#menu-projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    border: solid hotpink 2px;\n \n}\n#new-project>img,#view-add-task>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n    border: solid hotpink 2px;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n    align-items: flex-end;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    padding: 1em;\n    gap: .5em;\n}\n\n#new-project-modal{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    padding: 1em;\n    gap: .1em;\n\n}\ninput{\n    margin-bottom: 2em;\n}\n#view{\n    padding: 5em;\n}\n#view-header{\n    display: flex;\n    justify-content: center;\n    border-bottom: solid 2px pink;\n}\n\n#view-add-task{\n    display: flex;\n    align-items: center;\n    padding: 1em;\n    gap: 1em;\n}\n\n#task-editor{\n    display: grid;\n    grid-template-rows: auto auto auto auto;\n    padding: 1em;\n    gap: .5em;\n    border: solid 2px red;\n    margin: 1em;\n}\n#task-name,#task-description{\n    padding: 0;\n    margin: 0;\n    border:none;\n}\n\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n#priority,#due-date{\n    width: 5em;\n    height: 2em;\n}\n#task-editor-other{\n    display: flex;\n    gap: 1em;\n    margin: 1em 0;\n    padding-bottom: 1em;\n    border-bottom: solid 2px hotpink;\n}\n#task-editor-control{\n    justify-self: end;\n}\n#task-editor-control>button{\n    width: 5em;\n    height: 1.5em;\n    margin: .5em;\n}\n\n.view-project-header{\n    display:flex;\n    justify-content: center;\n  \n}\n#view-task-list>li{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: .5em;\n    margin-bottom: 1em;\n    border-bottom: 2px solid hotpink;\n\n}\n#view-task-list{\n    margin-top: 2em;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,yBAAyB;AAC7B;;;;AAIA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;;AAErB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;;AAE3B;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,QAAQ;IACR,yBAAyB;;AAE7B;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,YAAY;IACZ,WAAW;IACX,qBAAqB;AACzB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,OAAO;IACP,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,YAAY;IACZ,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,sBAAsB;IACtB,YAAY;IACZ,SAAS;;AAEb;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,YAAY;IACZ,SAAS;IACT,qBAAqB;IACrB,WAAW;AACf;AACA;IACI,UAAU;IACV,SAAS;IACT,WAAW;AACf;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,WAAW;AACf;AACA;IACI,aAAa;IACb,QAAQ;IACR,aAAa;IACb,mBAAmB;IACnB,gCAAgC;AACpC;AACA;IACI,iBAAiB;AACrB;AACA;IACI,UAAU;IACV,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,uBAAuB;;AAE3B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS;IACT,kBAAkB;IAClB,gCAAgC;;AAEpC;AACA;IACI,eAAe;AACnB",sourcesContent:["*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    border: solid hotpink 2px;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n    \n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n    \n}\n\n#menu-projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    border: solid hotpink 2px;\n \n}\n#new-project>img,#view-add-task>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n    border: solid hotpink 2px;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n    align-items: flex-end;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    padding: 1em;\n    gap: .5em;\n}\n\n#new-project-modal{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    padding: 1em;\n    gap: .1em;\n\n}\ninput{\n    margin-bottom: 2em;\n}\n#view{\n    padding: 5em;\n}\n#view-header{\n    display: flex;\n    justify-content: center;\n    border-bottom: solid 2px pink;\n}\n\n#view-add-task{\n    display: flex;\n    align-items: center;\n    padding: 1em;\n    gap: 1em;\n}\n\n#task-editor{\n    display: grid;\n    grid-template-rows: auto auto auto auto;\n    padding: 1em;\n    gap: .5em;\n    border: solid 2px red;\n    margin: 1em;\n}\n#task-name,#task-description{\n    padding: 0;\n    margin: 0;\n    border:none;\n}\n\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n#priority,#due-date{\n    width: 5em;\n    height: 2em;\n}\n#task-editor-other{\n    display: flex;\n    gap: 1em;\n    margin: 1em 0;\n    padding-bottom: 1em;\n    border-bottom: solid 2px hotpink;\n}\n#task-editor-control{\n    justify-self: end;\n}\n#task-editor-control>button{\n    width: 5em;\n    height: 1.5em;\n    margin: .5em;\n}\n\n.view-project-header{\n    display:flex;\n    justify-content: center;\n  \n}\n#view-task-list>li{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: .5em;\n    margin-bottom: 1em;\n    border-bottom: 2px solid hotpink;\n\n}\n#view-task-list{\n    margin-top: 2em;\n}"],sourceRoot:""}]);const d=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(i)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(r[c]=!0)}for(var s=0;s<e.length;s++){var A=[].concat(e[s]);i&&r[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var a={},r=[],d=0;d<e.length;d++){var c=e[d],s=i.base?c[0]+i.base:c[0],A=a[s]||0,l="".concat(s," ").concat(A);a[s]=A+1;var p=t(l),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=o(m,i);i.byIndex=d,n.splice(d,0,{identifier:l,updater:u,references:1})}r.push(l)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=i(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<a.length;r++){var d=t(a[r]);n[d].references--}for(var c=i(e,o),s=0;s<a.length;s++){var A=t(a[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=c}}},569:e=>{var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,o&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(i){var o=n[i];if(void 0!==o)return o.exports;var a=n[i]={id:i,exports:{}};return e[i](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&!e;)e=i[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"2053165c98aed89843d4.svg",n=t.p+"df91e92b70bd9cd92fd3.svg",i=t.p+"9eb92ffa5491e32831d3.png",o=t.p+"dea88cbb5d81822a05c2.png";function a(e,n){return{name:e,tasks:n,addTask:function(e){this.tasks.push(e)},deleteTask:function(e){this.tasks.splice(this.tasks.indexOf(e),1)}}}function r(e){let n=Array.from(JSON.parse(localStorage.getItem("projects"))||[]);n.forEach((t=>{if(JSON.stringify(e)===JSON.stringify(t)){let e=n.indexOf(t);n=n.slice(0,e).concat(n.slice(e+1))}})),localStorage.setItem("projects",JSON.stringify(n))}function d(){let e=JSON.parse(localStorage.getItem("projects"))||[];return e.forEach((n=>{let t=e.indexOf(n);e=e.slice(0,t).concat(e.slice(t+1)),e.push(a(n.name,n.tasks))})),e}function c(e,n){let t=d();t.forEach((e=>r(e))),e.deleteTask(n),t.forEach((n=>{n.name==e.name&&(n.tasks=e.tasks)})),localStorage.setItem("projects",JSON.stringify(t))}function s(){document.querySelector("#view")&&document.querySelector("#view").remove();const e=document.createElement("div"),n=document.createElement("div"),t=document.querySelector("#main"),i=document.querySelector("#menu-projects-header"),o=document.createElement("h1");e.id="view",n.appendChild(o),t.appendChild(e),i.addEventListener("click",(()=>{e.innerHTML="",e.append(n),o.textContent="Projects",n.classList.add("view-project-header")}))}function A(e){const t=document.createElement("li"),a=document.createElement("p"),r=new Image,d=new Image,s=new Image,A=document.createElement("div"),l=document.createElement("div"),m=document.createElement("div"),u=document.createElement("h1"),f=document.createElement("ul");return a.textContent=e.name,d.src=n,s.src=o,r.src=i,t.id="menu-"+e.name,r.classList.add("project-icon"),d.classList.add("edit-icon"),s.classList.add("delete-icon"),A.classList.add("project-view"),l.classList.add("view-project-header"),m.classList.add("project-main"),f.id="view-task-list",t.append(r,a,d,s),u.textContent=e.name,A.append(l,m),e.tasks.forEach((n=>{const t=p(n),i=t.taskLi;f.append(i),t.deleteIcon.addEventListener("click",(()=>{i.remove(),e.deleteTask(n),c(e,n)}))})),m.appendChild(f),l.appendChild(u),{menuLi:t,projectView:A,deleteIcon:s,projectMain:m}}function l(){let e=[],n=d();const t=document.querySelector("#menu-project-list"),i=document.querySelector("#view");t.innerHTML="",n.forEach((n=>{e.push(A(n))})),e.forEach((o=>{const a=document.createElement("div"),A=document.createElement("p");A.textContent="New task",a.append(A),a.addEventListener("click",(()=>{a.remove();let t=function(){const e=document.createElement("div"),n=document.createElement("input"),t=document.createElement("input"),i=document.createElement("button"),o=document.createElement("button"),a=document.createElement("button"),r=document.createElement("button"),d=document.createElement("div"),c=document.createElement("div");return e.id="task-editor",n.id="task-name",t.id="task-description",n.value="Task name",t.value="Description",i.id="due-date",o.id="priority",i.textContent="Due date",o.textContent="Priority",a.id="task-editor-add",r.id="task-editor-cancel",a.textContent="Add",r.textContent="Cancel",d.id="task-editor-other",c.id="task-editor-control",e.appendChild(n),e.appendChild(t),e.appendChild(d),e.appendChild(c),d.appendChild(i),d.appendChild(o),c.appendChild(r),c.appendChild(a),{taskEditor:e,addBtn:a,taskName:n,taskDescription:t}}();t.addBtn.addEventListener("click",(()=>{t.taskEditor.remove();const s={title:t.taskName.value,description:"xd",duedate:"xd"},A=p(s),l=document.querySelector("#view-task-list"),m=A.deleteIcon;l.append(A.taskLi),i.append(a),console.log(n[e.indexOf(o)]),function(e,n){let t=d();t.forEach((e=>r(e))),e.addTask(n),t.forEach((n=>{n.name==e.name&&(n.tasks=e.tasks)})),localStorage.setItem("projects",JSON.stringify(t))}(n[e.indexOf(o)],s),m.addEventListener("click",(()=>{A.taskLi.remove(),n[e.indexOf(o)].deleteTask(s),c(n[e.indexOf(o)],s)}))})),i.append(t.taskEditor)})),t.appendChild(o.menuLi),o.menuLi.addEventListener("click",(e=>{e.stopPropagation(),i.innerHTML="",i.appendChild(o.projectView),o.projectMain.appendChild(a)})),o.deleteIcon.addEventListener("click",(t=>{t.stopPropagation(),r(n[e.indexOf(o)]),o.menuLi.remove(),o.projectView.remove(),s()}))}))}function p(e){const n=document.createElement("li"),t=document.createElement("h4"),i=document.createElement("h5"),a=document.createElement("h5"),r=new Image;return r.src=o,r.classList.add("delete-icon"),t.textContent=e.title,n.append(t),i.textContent=e.description,n.append(i),a.textContent=e.duedate,n.append(a),n.append(r),{taskLi:n,deleteIcon:r}}window.getProjects=d;var m=t(379),u=t.n(m),f=t(795),C=t.n(f),g=t(569),h=t.n(g),I=t(565),v=t.n(I),b=t(216),x=t.n(b),B=t(589),y=t.n(B),k=t(426),E={};E.styleTagTransform=y(),E.setAttributes=v(),E.insert=h().bind(null,"head"),E.domAPI=C(),E.insertStyleElement=x(),u()(k.Z,E),k.Z&&k.Z.locals&&k.Z.locals,console.log(d()),function(){const e=document.createElement("div"),n=document.createElement("h1"),t=document.querySelector("#content");n.textContent="TO DO LIST",n.id="website-title",e.id="header",t.appendChild(e),e.appendChild(n)}(),function(){const e=document.createElement("div"),n=document.querySelector("#content");d().forEach((e=>A(e))),e.id="main",n.appendChild(e)}(),function(){const e=document.createElement("div"),n=document.querySelector("#content");e.id="footer",n.appendChild(e)}(),function(){const n=document.createElement("div"),t=document.createElement("div"),i=document.createElement("div"),o=document.createElement("ul"),a=document.createElement("div"),r=document.createElement("div"),d=document.createElement("h5"),c=new Image,s=document.querySelector("#main");n.id="menu",t.id="menu-projects",i.id="menu-tasks",d.id="projects-title",d.textContent="Projects",o.id="menu-project-list",a.id="menu-projects-header",c.src=e,r.id="new-project",t.appendChild(o),s.prepend(n),n.appendChild(t),t.prepend(a),a.appendChild(d),a.appendChild(r),r.appendChild(c),r.addEventListener("click",(e=>{e.stopPropagation(),document.querySelector("#new-project-modal").style.display="flex"}))}(),s(),l(),function(){const e=document.createElement("div"),n=document.createElement("input"),t=document.createElement("button"),i=document.createElement("label");e.id="new-project-modal",n.id="new-project-name",n.type="text",n.name="new-project-name",t.type="submit",t.id="new-project-submit",t.textContent="Create",i.for=n.name,i.innerHTML="<b>Name</b>",e.appendChild(i),e.appendChild(n),e.appendChild(t),content.appendChild(e),e.style.display="none",t.addEventListener("click",(()=>{let t=d(),i=[];t.forEach((e=>{i.push(e.name)})),i.includes(n.value)||(function(e){let n=d();n.push(e),localStorage.setItem("projects",JSON.stringify(n))}(a(n.value,[])),e.style.display="none",l())}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,