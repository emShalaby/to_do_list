(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([e.id,"*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n}\n\n#projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    \n \n}\n#new-project>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    gap: .5em\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;;;;AAIA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,QAAQ;;;AAGZ;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,OAAO;IACP,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB;AACJ",sourcesContent:["*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n}\n\n#projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    \n \n}\n#new-project>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    gap: .5em\n}\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var p=[].concat(e[s]);r&&a[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],p=o[s]||0,l="".concat(s," ").concat(p);o[s]=p+1;var u=t(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var A=i(m,r);r.byIndex=c,n.splice(c,0,{identifier:l,updater:A,references:1})}a.push(l)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var c=t(o[a]);n[c].references--}for(var d=r(e,i),s=0;s<o.length;s++){var p=t(o[s]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!e;)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"2053165c98aed89843d4.svg",n=t.p+"df91e92b70bd9cd92fd3.svg",r=t.p+"9eb92ffa5491e32831d3.png",i=t.p+"dea88cbb5d81822a05c2.png";function o(e,n){return{name:e,tasks:n,addTask:function(e){this.tasks.push(e)},deleteTask:function(e){this.tasks.splice(this.tasks.indexOf(e),1)}}}function a(){let e=JSON.parse(localStorage.getItem("projects"))||[];return e.forEach((n=>{e.splice(e.indexOf(n),1),e.push(o(n.name,n.tasks))})),e}function c(e){const t=document.createElement("li"),o=document.createElement("p"),a=new Image,c=new Image,d=new Image,s=document.querySelector("#project-list");a.src=r,a.classList.add("project-icon"),c.classList.add("edit-icon"),c.src=n,d.classList.add("delete-icon"),d.src=i,t.id=e.name,t.classList.add("project"),o.textContent=e.name,t.appendChild(a),t.appendChild(o),t.appendChild(c),t.appendChild(d),s.appendChild(t),d.addEventListener("click",(()=>{!function(e){let n=Array.from(JSON.parse(localStorage.getItem("projects"))||[]);n.forEach((t=>{(t.name=e)&&n.splice(n.indexOf(t),1)})),localStorage.setItem("projects",JSON.stringify(n))}(d.parentNode.id),d.parentNode.remove()}))}window.projectGenerate=o;var d=t(379),s=t.n(d),p=t(795),l=t.n(p),u=t(569),m=t.n(u),A=t(565),f=t.n(A),g=t(216),h=t.n(g),C=t(589),v=t.n(C),y=t(426),b={};b.styleTagTransform=v(),b.setAttributes=f(),b.insert=m().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=h(),s()(y.Z,b),y.Z&&y.Z.locals&&y.Z.locals,function(){const e=document.createElement("div"),n=document.createElement("h1"),t=document.querySelector("#content");n.textContent="TO DO LIST",n.id="website-title",e.id="header",t.appendChild(e),e.appendChild(n)}(),function(){const e=document.createElement("div"),n=document.querySelector("#content"),t=document.createElement("input"),r=document.createElement("button");e.id="new-project-modal",t.id="new-project-name",t.type="text",r.type="submit",r.id="new-project-submit",r.textContent="Create",e.appendChild(t),e.appendChild(r),n.appendChild(e),e.style.display="none",r.addEventListener("click",(()=>e.style.display="none"))}(),function(){document.querySelector("#main")&&document.querySelector("#main").remove();const n=document.createElement("div"),t=document.createElement("div"),r=document.createElement("div"),i=document.createElement("div"),d=document.createElement("div"),s=document.createElement("div"),p=document.createElement("div"),l=document.querySelector("#content"),u=document.createElement("h5"),m=new Image,A=document.createElement("ul"),f=document.createElement("div"),g=document.createElement("div");n.id="main",t.id="menu",r.id="view",i.id="menu-projects",d.id="menu-tasks",s.id="view-projects",p.id="view-tasks",u.id="projects-title",u.textContent="Projects",A.id="project-list",f.id="projects-header",m.src=e,g.id="new-project",i.appendChild(A),l.appendChild(n),n.appendChild(t),n.appendChild(r),t.appendChild(i),i.prepend(f),f.appendChild(u),f.appendChild(g),g.appendChild(m),r.appendChild(s),s.appendChild(p),a().forEach((e=>c(e))),g.addEventListener("click",(()=>{c(o("name",[])),function(e){let n=a();n.push(e),localStorage.setItem("projects",JSON.stringify(n))}(o("name",[])),document.querySelector("#new-project-modal").style.display="block"}))}(),function(){const e=document.createElement("div"),n=document.querySelector("#content");e.id="footer",n.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,