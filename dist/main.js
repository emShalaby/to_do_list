(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,"*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    border: solid hotpink 2px;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n    \n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n    \n}\n\n#projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    border: solid hotpink 2px;\n \n}\n#new-project>img,#view-add-task>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n    border: solid hotpink 2px;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    gap: .5em;\n    border: solid hotpink 2px;\n}\n\n#new-project-modal{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    padding: 1em;\n    gap: .1em;\n\n}\ninput{\n    margin-bottom: 2em;\n}\n#view{\n    padding: 5em;\n}\n#view-header{\n    display: flex;\n    justify-content: center;\n    border-bottom: solid 2px pink;\n}\n\n#view-add-task{\n    display: flex;\n    align-items: center;\n    padding: 1em;\n    gap: 1em;\n}\n\n#task-editor{\n    display: grid;\n    grid-template-rows: auto auto auto auto;\n    padding: 1em;\n    gap: .5em;\n    border: solid 2px red;\n    margin: 1em;\n}\n#task-name,#task-description{\n    padding: 0;\n    margin: 0;\n    border:none;\n}\n\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n#priority,#due-date{\n    width: 5em;\n    height: 2em;\n}\n#task-editor-other{\n    display: flex;\n    gap: 1em;\n    margin: 1em 0;\n    padding-bottom: 1em;\n    border-bottom: solid 2px hotpink;\n}\n#task-editor-control{\n    justify-self: end;\n}\n#task-editor-control>button{\n    width: 5em;\n    height: 1.5em;\n    margin: .5em;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,yBAAyB;AAC7B;;;;AAIA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,iBAAiB;;AAErB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;;AAE3B;;AAEA;IACI,aAAa;IACb,OAAO;IACP,mBAAmB;IACnB,8BAA8B;IAC9B,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,QAAQ;IACR,yBAAyB;;AAE7B;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,OAAO;IACP,kBAAkB;IAClB,mBAAmB;IACnB,gBAAgB;IAChB,SAAS;IACT,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,sBAAsB;IACtB,YAAY;IACZ,SAAS;;AAEb;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,uCAAuC;IACvC,YAAY;IACZ,SAAS;IACT,qBAAqB;IACrB,WAAW;AACf;AACA;IACI,UAAU;IACV,SAAS;IACT,WAAW;AACf;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,WAAW;AACf;AACA;IACI,aAAa;IACb,QAAQ;IACR,aAAa;IACb,mBAAmB;IACnB,gCAAgC;AACpC;AACA;IACI,iBAAiB;AACrB;AACA;IACI,UAAU;IACV,aAAa;IACb,YAAY;AAChB",sourcesContent:["*{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n}\n#main{\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    border: solid hotpink 2px;\n}\n\n\n\n#menu{\n    /* for debugging */\n    border: solid 1px black;\n    padding-left: 2em;\n    \n}\n\n#view{\n    /* for debugging */\n    border: solid 1px black;\n    \n}\n\n#projects-header{\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n    margin: .5em;\n    margin-left: -1.2em ;\n    padding: .5em;\n    gap: 1em;\n    border: solid hotpink 2px;\n \n}\n#new-project>img,#view-add-task>img{\n    height: .8em;\n}\n#new-project{\n    display: flex;\n    border: solid hotpink 2px;\n}\n.edit-icon{\n    height: 10px;\n    width: 10px;\n    margin-left: auto;\n}\n.project-icon{\n    height: 15px;\n    width: 20px;\n}\n.delete-icon{\n    height: 15px;\n    width: 20px;\n}\nli{\n    display: flex;\n    align-items: center;\n    flex: 1;\n    margin-right: .5em;\n    margin-bottom: .5em;\n    margin-top: .5em;\n    gap: .5em;\n    border: solid hotpink 2px;\n}\n\n#new-project-modal{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    flex-direction: column;\n    padding: 1em;\n    gap: .1em;\n\n}\ninput{\n    margin-bottom: 2em;\n}\n#view{\n    padding: 5em;\n}\n#view-header{\n    display: flex;\n    justify-content: center;\n    border-bottom: solid 2px pink;\n}\n\n#view-add-task{\n    display: flex;\n    align-items: center;\n    padding: 1em;\n    gap: 1em;\n}\n\n#task-editor{\n    display: grid;\n    grid-template-rows: auto auto auto auto;\n    padding: 1em;\n    gap: .5em;\n    border: solid 2px red;\n    margin: 1em;\n}\n#task-name,#task-description{\n    padding: 0;\n    margin: 0;\n    border:none;\n}\n\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n#priority,#due-date{\n    width: 5em;\n    height: 2em;\n}\n#task-editor-other{\n    display: flex;\n    gap: 1em;\n    margin: 1em 0;\n    padding-bottom: 1em;\n    border-bottom: solid 2px hotpink;\n}\n#task-editor-control{\n    justify-self: end;\n}\n#task-editor-control>button{\n    width: 5em;\n    height: 1.5em;\n    margin: .5em;\n}"],sourceRoot:""}]);const d=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var s=[].concat(e[A]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],A=o.base?c[0]+o.base:c[0],s=i[A]||0,p="".concat(A," ").concat(s);i[A]=s+1;var l=t(p),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)n[l].references++,n[l].updater(m);else{var u=r(m,o);o.byIndex=d,n.splice(d,0,{identifier:p,updater:u,references:1})}a.push(p)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=t(i[a]);n[d].references--}for(var c=o(e,r),A=0;A<i.length;A++){var s=t(i[A]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"2053165c98aed89843d4.svg",n=t.p+"df91e92b70bd9cd92fd3.svg",o=t.p+"9eb92ffa5491e32831d3.png",r=t.p+"dea88cbb5d81822a05c2.png";function i(e,n){return{name:e,tasks:n,addTask:function(e){this.tasks.push(e)},deleteTask:function(e){this.tasks.splice(this.tasks.indexOf(e),1)}}}function a(){let e=JSON.parse(localStorage.getItem("projects"))||[];return e.forEach((n=>{e.splice(e.indexOf(n),1),e.push(i(n.name,n.tasks))})),e}function d(e){const t=document.createElement("li"),i=document.createElement("p"),a=new Image,d=new Image,c=new Image,A=document.createElement("div"),s=document.createElement("div"),p=document.createElement("div"),l=document.createElement("h1"),m=document.createElement("ul");return i.textContent=e.name,d.src=n,c.src=r,a.src=o,t.id="menu-"+e.name,a.classList.add("project-icon"),d.classList.add("edit-icon"),c.classList.add("delete-icon"),A.classList.add("project-view"),s.classList.add("project-header"),p.classList.add("project-main"),t.append(a,i,d,c),l.textContent=e.name,A.append(s,p),e.tasks.forEach((e=>{const n=document.createElement("li");n.textContent=e.title,viewProjects.appendChild(viewTasks),m.appendChild(n)})),p.appendChild(m),s.appendChild(l),{menuLi:t,projectView:A,deleteIcon:c}}function c(){let e=[],n=a();const t=document.querySelector("#menu-project-list"),o=document.querySelector("#view");t.innerHTML="",n.forEach((n=>{e.push(d(n))})),e.forEach((r=>{t.appendChild(r.menuLi),r.menuLi.addEventListener("click",(e=>{e.stopPropagation(),o.innerHTML="",o.appendChild(r.projectView)})),r.deleteIcon.addEventListener("click",(t=>{t.stopPropagation(),function(e){let n=Array.from(JSON.parse(localStorage.getItem("projects"))||[]);n.forEach((t=>{(t.name=e)&&n.splice(n.indexOf(t),1)})),localStorage.setItem("projects",JSON.stringify(n))}(n[e.indexOf(r)]),r.menuLi.remove(),r.projectView.remove()}))}))}var A=t(379),s=t.n(A),p=t(795),l=t.n(p),m=t(569),u=t.n(m),f=t(565),C=t.n(f),g=t(216),h=t.n(g),I=t(589),b=t.n(I),v=t(426),B={};B.styleTagTransform=b(),B.setAttributes=C(),B.insert=u().bind(null,"head"),B.domAPI=l(),B.insertStyleElement=h(),s()(v.Z,B),v.Z&&v.Z.locals&&v.Z.locals,function(){const e=document.createElement("div"),n=document.createElement("h1"),t=document.querySelector("#content");n.textContent="TO DO LIST",n.id="website-title",e.id="header",t.appendChild(e),e.appendChild(n)}(),function(){const e=document.createElement("div"),n=document.querySelector("#content");a().forEach((e=>d(e))),e.id="main",n.appendChild(e)}(),function(){const e=document.createElement("div"),n=document.querySelector("#content");e.id="footer",n.appendChild(e)}(),function(){const n=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div"),r=document.createElement("ul"),i=document.createElement("div"),a=document.createElement("div"),d=document.createElement("h5"),c=new Image,A=document.querySelector("#main");n.id="menu",t.id="menu-projects",o.id="menu-tasks",d.id="projects-title",d.textContent="Projects",r.id="menu-project-list",i.id="projects-header",c.src=e,a.id="new-project",t.appendChild(r),A.prepend(n),n.appendChild(t),t.prepend(i),i.appendChild(d),i.appendChild(a),a.appendChild(c),a.addEventListener("click",(()=>{document.querySelector("#new-project-modal").style.display="flex"}))}(),function(){const e=document.createElement("div"),n=document.createElement("div"),t=document.querySelector("#main"),o=document.querySelector("#projects-header"),r=document.createElement("h1");e.id="view",n.appendChild(r),t.appendChild(e),o.addEventListener("click",(()=>{e.innerHTML="",e.append(n),r.textContent="Projects"}))}(),c(),function(){const e=document.createElement("div"),n=document.createElement("input"),t=document.createElement("button"),o=document.createElement("label");e.id="new-project-modal",n.id="new-project-name",n.type="text",n.name="new-project-name",t.type="submit",t.id="new-project-submit",t.textContent="Create",o.for=n.name,o.innerHTML="<b>Name</b>",e.appendChild(o),e.appendChild(n),e.appendChild(t),content.appendChild(e),e.style.display="none",t.addEventListener("click",(()=>{!function(e){let n=a();n.push(e),localStorage.setItem("projects",JSON.stringify(n))}(i(n.value,[])),e.style.display="none",c()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,